services:
  db:
    image: postgres:15-alpine
    container_name: quickfiss_database
    restart: unless-stopped
    environment:
      POSTGRES_USER: quickfiss
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: quickfiss
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quickfiss_network
    command: >
      postgres -c 'max_connections=50'
      -c 'shared_buffers=256MB'
      -c 'effective_cache_size=1GB'
      -c 'maintenance_work_mem=64MB'
      -c 'checkpoint_completion_target=0.9'
      -c 'wal_buffers=16MB'
      -c 'default_statistics_target=100'
  redis:
    image: redis:7-alpine
    container_name: quickfiss_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - quickfiss_network
    command: >
      redis-server --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 900 1 --save 300 10 --save 60 10000
  web:
    build: .
    container_name: quickfiss_web
    restart: unless-stopped
    command: gunicorn --config gunicorn_config.py quickfiss.wsgi:application
    environment:
      - e=${e:-}
      - i=${i:-}
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    networks:
      - quickfiss_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: quickfiss_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    networks:
      - quickfiss_network
  celery:
    build: .
    container_name: quickfiss_celery
    command: celery -A quickfiss worker --loglevel=info
    environment:
      - e=${e:-}
      - i=${i:-}
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    networks:
      - quickfiss_network
volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
networks:
  quickfiss_network:
    driver: bridge